#include "gtest/gtest.h"

#include "maxwell/Hopfion.h"

#include <fstream>

class TestHopfion : public ::testing::Test {
};

TEST_F(TestHopfion, initialConditionForHopfion) {
	/*This test check if the values generated by the class Hopfion are the right..*/



	std::string path = "testData/hopfion/";
	
	std::string casename = "hopfion_p1_q1.txt";
	Hopfion hopfion(1, 1);

	std::ifstream inputFile; 
	std::string filename = path + casename;
	inputFile.open(filename);
	if (!inputFile.is_open()) {
		throw std::runtime_error("Could not open file: " + filename);
	}

	while (!inputFile.eof()) {
		double t;
		Hopfion::Vec3 pos, referenceE, referenceH;
		inputFile >> t 
			>> pos[0] >> pos[1] >> pos[2]
			>> referenceE[0] >> referenceE[1] >> referenceE[2] 
			>> referenceH[0] >> referenceH[1] >> referenceH[2];

		Hopfion::FieldEH computed = hopfion.evaluate(t, pos);

		for (std::size_t d = 0; d < 3; d++) {
			EXPECT_NEAR(referenceE[d], computed.first[d], 1e-8);
			EXPECT_NEAR(referenceH[d], computed.second[d], 1e-8);
		}
		
	}
	
}

TEST_F(TestHopfion, visHopfionWithParaview) {

	/*This test check if it is possible to visualize the hopfion at time 0 with Paraview*/
}

TEST_F(TestHopfion, HopfionRun) {

	/*This test check if it is possible to apply the Solver to run the initial condition of the hopfion.*/
}